name: Deploy

on:
  push:
    tags:
      - "*"

jobs:
  print-stuff:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Print ENV
        run: env

      - name: echo stuff
        run: echo $GITHUB_EVENT_NAME

      - name: print github object
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"

  prepare-to-publish:
    runs-on: ubuntu-latest
    outputs:
      gem-version: ${{ steps.gem-version.outputs.gem-version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Save gem version
        id: gem-version
        run: echo "::set-output name=gem-version::$(grep -oE "[0-9]+\.[0-9]+\.[0-9]+-?[a-z]*\.?[0-9]*" lib/version.rb)"

      - name: Save tag version
        id: tag-version
        run: echo "::set-output name=tag-version::${GITHUB_REF#refs/*/}"

      - name: Exit on tag version mismatch
        if: ${{ steps.tag-version.outputs.tag-version != steps.gem-version.outputs.gem-version }}
        run: |
          echo "Tag version (${{ steps.tag-version.outputs.tag-version }}) doesn't match project version (${{ steps.gem-version.outputs.gem-version }})"
          exit 1

  release-notes:
    needs: prepare-to-publish
    runs-on: ubuntu-latest
    outputs:
      release-notes: ${{ steps.release-notes.outputs.release-notes }}
      decoded-release-notes: ${{ steps.decode.outputs.decoded-release-notes }}
      from-file: ${{ steps.file.outputs.from-file }}

    steps:
      - uses: actions/checkout@v2
        with:
          repository: mscwilson/changelog-creator

      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true # runs ‘bundle install’ and caches installed gems automatically

      - name: Create release notes
        id: release-notes
        uses: mscwilson/changelog-creator@0.1.0
        env:
          ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Decode release notes
        id: decode
        env:
          DECODED-NOTES: ${{ steps.release-notes.outputs.release-notes }} | base64 --decode
        run: echo "::set-output name=decoded-release-notes::$DECODED-NOTES"

      - name: print notes
        run: echo ${{ steps.release-notes.outputs.release-notes }}

      - name: print decoded notes
        id: file
        run: |
          echo ${{ steps.release-notes.outputs.release-notes }} | base64 --decode > temp.txt
          cat temp.txt
          echo "::set-output name=from-file::$(cat temp.txt)"

      - name: print decoded notes from the separate step
        run: echo ${{ steps.decode.outputs.decoded-release-notes }}

      - name: print the from file attempt
        run: echo ${{ steps.file.outputs.from-file }}

  publish:
    needs: [prepare-to-publish, release-notes]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Release on GitHub
        uses: softprops/action-gh-release@v0.1.12
        with:
          name: Version ${{ needs.prepare-to-publish.outputs.gem-version }}
          prerelease: ${{ contains(needs.prepare-to-publish.outputs.gem-version, '-') }}
          body: ${{ steps.release-notes.outputs.release-notes }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
